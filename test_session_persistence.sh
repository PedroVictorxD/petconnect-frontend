#!/bin/bash

echo "üß™ Testando Persist√™ncia de Sess√£o - PetConnect"
echo "================================================"

BASE_URL="http://localhost:8080"
FRONTEND_URL="http://localhost:3000"

echo ""
echo "1. Testando login..."
LOGIN_RESPONSE=$(curl -s -X POST "$BASE_URL/api/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "tutor@teste.com",
    "password": "admin123"
  }')

echo "Resposta do login: $LOGIN_RESPONSE"

# Extrair token da resposta
TOKEN=$(echo $LOGIN_RESPONSE | grep -o '"token":"[^"]*"' | cut -d'"' -f4)

if [ -z "$TOKEN" ]; then
    echo "‚ùå Falha ao obter token"
    exit 1
fi

echo "‚úÖ Token obtido: ${TOKEN:0:20}..."

echo ""
echo "2. Testando valida√ß√£o de token..."
VALIDATION_RESPONSE=$(curl -s -X GET "$BASE_URL/api/auth/validate" \
  -H "Authorization: Bearer $TOKEN")

echo "Resposta da valida√ß√£o: $VALIDATION_RESPONSE"

echo ""
echo "3. Testando acesso a endpoint protegido..."
PROTECTED_RESPONSE=$(curl -s -X GET "$BASE_URL/api/pets" \
  -H "Authorization: Bearer $TOKEN")

if [[ $PROTECTED_RESPONSE == *"id"* ]]; then
    echo "‚úÖ Acesso a endpoint protegido funcionando"
else
    echo "‚ùå Falha no acesso a endpoint protegido"
fi

echo ""
echo "4. Testando token inv√°lido..."
INVALID_RESPONSE=$(curl -s -X GET "$BASE_URL/api/auth/validate" \
  -H "Authorization: Bearer invalid_token")

echo "Resposta com token inv√°lido: $INVALID_RESPONSE"

echo ""
echo "üéØ Teste de Persist√™ncia Conclu√≠do!"
echo ""
echo "üìã Instru√ß√µes para testar no navegador:"
echo "1. Acesse: $FRONTEND_URL"
echo "2. Fa√ßa login com: tutor@teste.com / admin123"
echo "3. Atualize a p√°gina (F5)"
echo "4. Verifique se permanece logado"
echo ""
echo "üîç Logs para verificar:"
echo "- Abra o DevTools (F12)"
echo "- V√° na aba Console"
echo "- Procure por mensagens do AuthProvider" 